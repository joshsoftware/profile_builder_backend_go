openapi: 3.0.3
info:
  title: Profile Builder API
  description: API documentation for Creating a Profile Builder Application with Admin Control and some advanced features.s
  version: 1.0.0
servers:
  - url: http://localhost:3001
    description: Local server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /api/profiles:
    get:
      summary: List of Profiles
      tags:
        - Profiles
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
    post:
      summary: Create Profile
      tags:
        - Profiles
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                    gender:
                      type: string
                    mobile:
                      type: string
                    designation:
                      type: string
                    description:
                      type: string
                    title:
                      type: string
                    years_of_experience:
                      type: integer
                    primary_skills:
                      type: array
                      items:
                        type: string
                    secondary_skills:
                      type: array
                      items:
                        type: string
                    github_link:
                      type: string
                    linkedin_link:
                      type: string
                    career_objectives:
                      type: string
      responses:
        "201":
          description: Profile created

  /api/skills:
    get:
      summary: List of Skills
      tags:
        - Skills
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response

  /api/profiles/{profileId}:
    get:
      summary: Get Profile by ID
      tags:
        - Profiles
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful response

  /api/profiles/{profileId}/educations:
    get:
      summary: Get Educations by Profile ID
      tags:
        - Educations
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
    post:
      summary: Create Educations
      tags:
        - Educations
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                educations:
                  type: array
                  items:
                    type: object
                    properties:
                      degree:
                        type: string
                      university_name:
                        type: string
                      place:
                        type: string
                      percent_or_cgpa:
                        type: string
                      passing_year:
                        type: string
      responses:
        "201":
          description: Education created

  /api/profiles/{profileId}/projects:
    get:
      summary: Get Projects by Profile ID
      tags:
        - Projects
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
    post:
      summary: Create Projects
      tags:
        - Projects
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                projects:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      role:
                        type: string
                      responsibilities:
                        type: string
                      technologies:
                        type: array
                        items:
                          type: string
                      tech_worked_on:
                        type: array
                        items:
                          type: string
                      working_start_date:
                        type: string
                      working_end_date:
                        type: string
                      duration:
                        type: string
      responses:
        "201":
          description: Project created

  /api/profiles/{profileId}/experiences:
    get:
      summary: Get Experiences by Profile ID
      tags:
        - Experiences
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
    post:
      summary: Create Experiences
      tags:
        - Experiences
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                experiences:
                  type: array
                  items:
                    type: object
                    properties:
                      designation:
                        type: string
                      company_name:
                        type: string
                      from_date:
                        type: string
                      to_date:
                        type: string
      responses:
        "201":
          description: Experience created

  /api/profiles/{profileId}/achievements:
    get:
      summary: Get Achievements by Profile ID
      tags:
        - Achievements
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
    post:
      summary: Create Achievements
      tags:
        - Achievements
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                achievements:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
      responses:
        "201":
          description: Achievement created

  /api/profiles/{profileId}/certificates:
    get:
      summary: Get Certificates by Profile ID
      tags:
        - Certificates
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
    post:
      summary: Create Certificates
      tags:
        - Certificates
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                certificates:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      organization_name:
                        type: string
                      description:
                        type: string
                      issued_date:
                        type: string
                      from_date:
                        type: string
                      to_date:
                        type: string
      responses:
        "201":
          description: Certificate created

  /login:
    post:
      summary: User Login
      tags:
        - Login/Logout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
      responses:
        "200":
          description: Successful login

  /api/logout:
    delete:
      summary: User Logout
      description: Use this endpoint to log out the currently authenticated user. Requires a JWT token in the Authorization header.
      tags:
        - Login/Logout
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful logout.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logout successfully
        "401":
          description: Unauthorized - User is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: unauthorized access
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 500
                  error_message:
                    type: string
                    example: internal server error
        "502":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 502
                  error_message:
                    type: string
                    example: invalid request data

  /api/profiles/{profileId}/educations/{educationId}:
    put:
      summary: Update Education of Specific ID
      tags:
        - Educations
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
        - name: educationId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                education:
                  type: object
                  properties:
                    degree:
                      type: string
                    university_name:
                      type: string
                    place:
                      type: string
                    percent_or_cgpa:
                      type: string
                    passing_year:
                      type: string
      responses:
        "200":
          description: Education updated

  /api/profiles/{profileId}/experiences/{experienceId}:
    put:
      summary: Update Experience of Specific ID
      tags:
        - Experiences
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
        - name: experienceId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                experience:
                  type: object
                  properties:
                    designation:
                      type: string
                    company_name:
                      type: string
                    from_date:
                      type: string
                    to_date:
                      type: string
      responses:
        "200":
          description: Experience updated

  /api/profiles/{profileId}/projects/{projectId}:
    put:
      summary: Update Project of Specific ID
      tags:
        - Projects
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    role:
                      type: string
                    responsibilities:
                      type: string
                    technologies:
                      type: array
                      items:
                        type: string
                    tech_worked_on:
                      type: array
                      items:
                        type: string
                    working_start_date:
                      type: string
                    working_end_date:
                      type: string
                    duration:
                      type: string
      responses:
        "200":
          description: Project updated

  /api/profiles/{profileId}/certificates/{certificateId}:
    put:
      summary: Update Certificate of Specific ID
      tags:
        - Certificates
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
        - name: certificateId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                certificate:
                  type: object
                  properties:
                    name:
                      type: string
                    organization_name:
                      type: string
                    description:
                      type: string
                    issued_date:
                      type: string
                    from_date:
                      type: string
                    to_date:
                      type: string
      responses:
        "200":
          description: Certificate updated

  /api/profiles/{profileId}/achievements/{achievementId}:
    put:
      summary: Update Achievement of Specific ID
      tags:
        - Achievements
      security:
        - bearerAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
        - name: achievementId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                achievement:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
      responses:
        "200":
          description: Achievement updated

  /api/profiles/{profile_id}/achievements/{id}:
    delete:
      summary: Delete User Achievement
      tags:
        - Achievements
      description: Delete a achievement by specifying its ID and the profile ID.
      operationId: deleteAchievement
      parameters:
        - name: profile_id
          in: path
          description: The ID of the profile from which the achievement will be deleted.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The ID of the achievement that needs to be deleted.
          required: true
          schema:
            type: string

      responses:
        "200":
          description: Achievement deletion response.
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          message:
                            type: string
                            example: Achievement deleted successfully.
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          message:
                            type: string
                            example: Resource not found for the given request ID.

        "401":
          description: Unauthorized user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 401
                  error_message:
                    type: string
                    example: invalid token

        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 500
                  error_message:
                    type: string
                    example: internal server error
        "502":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 502
                  error_message:
                    type: string
                    example: invalid request data

  /api/profiles/{profile_id}/certificates/{id}:
    delete:
      summary: Delete User Certificate
      tags:
        - Certificates
      description: Delete a certificate by specifying its ID and the profile ID.
      operationId: deleteCertificate
      parameters:
        - name: profile_id
          in: path
          description: The ID of the profile from which the certificate will be deleted.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The ID of the certificate that needs to be deleted.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Certificate deletion response.
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          message:
                            type: string
                            example: Certificate deleted successfully.
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          message:
                            type: string
                            example: Resource not found for the given request ID.
        "401":
          description: Unauthorized user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 401
                  error_message:
                    type: string
                    example: invalid token
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 500
                  error_message:
                    type: string
                    example: internal server error
        "502":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 502
                  error_message:
                    type: string
                    example: invalid request data

  /api/profiles/{profile_id}/educations/{id}:
    delete:
      summary: Delete User Education
      tags:
        - Educations
      description: Delete a education by specifying its ID and the profile ID.
      operationId: deleteEducation
      parameters:
        - name: profile_id
          in: path
          description: The ID of the profile from which the education will be deleted.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The ID of the education that needs to be deleted.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Education deletion response.
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          message:
                            type: string
                            example: Education deleted successfully.
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          message:
                            type: string
                            example: Resource not found for the given request ID.
        "401":
          description: Unauthorized user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 401
                  error_message:
                    type: string
                    example: invalid token
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 500
                  error_message:
                    type: string
                    example: internal server error
        "502":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 502
                  error_message:
                    type: string
                    example: invalid request data

  /api/profiles/{profile_id}/experiences/{id}:
    delete:
      summary: Delete User Experience
      tags:
        - Experiences
      description: Delete a experience by specifying its ID and the profile ID.
      operationId: deleteExperience
      parameters:
        - name: profile_id
          in: path
          description: The ID of the profile from which the experience will be deleted.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The ID of the experience that needs to be deleted.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Experience deletion response.
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          message:
                            type: string
                            example: Experience deleted successfully.
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          message:
                            type: string
                            example: Resource not found for the given request ID.
        "401":
          description: Unauthorized user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 401
                  error_message:
                    type: string
                    example: invalid token
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 500
                  error_message:
                    type: string
                    example: internal server error
        "502":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 502
                  error_message:
                    type: string
                    example: invalid request data

  /api/profiles/{profile_id}/projects/{id}:
    delete:
      summary: Delete User Project
      tags:
        - Projects
      description: Delete a project by specifying its ID and the profile ID.
      operationId: deleteProject
      parameters:
        - name: profile_id
          in: path
          description: The ID of the profile from which the project will be deleted.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The ID of the project that needs to be deleted.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Project deletion response.
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          message:
                            type: string
                            example: Project deleted successfully.
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          message:
                            type: string
                            example: Resource not found for the given request ID.
        "401":
          description: Unauthorized user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 401
                  error_message:
                    type: string
                    example: invalid token
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 500
                  error_message:
                    type: string
                    example: internal server error
        "502":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 502
                  error_message:
                    type: string
                    example: invalid request data

  /api/profiles/{profile_id}:
    delete:
      summary: Delete User Profile
      tags:
        - Profiles
      description: Delete a profile using specific profile ID.
      operationId: deleteProfile
      parameters:
        - name: profile_id
          in: path
          description: The ID of the profile to be deleted.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Profile deletion response.
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          message:
                            type: string
                            example: Profile deleted successfully.
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          message:
                            type: string
                            example: Resource not found for the given profile ID.
        "401":
          description: Unauthorized user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 401
                  error_message:
                    type: string
                    example: invalid token
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 500
                  error_message:
                    type: string
                    example: internal server error
        "502":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    example: 502
                  error_message:
                    type: string
                    example: invalid request data

  /api/profiles/{profile_id}/employee_invite:
    post:
      summary: Send Employee Invitation
      description: This api is used to send employee invitation on email for complete their profile
      tags:
        - Email
      security:
        - bearerAuth: []
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Contains the profile ID of the employee to whom the invitation will be sent.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profile_id:
                  type: number
                  example: 80
      responses:
        "200":
          description: Invitation sent successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invitation sent successfully to employee
        "400":
          description: Bad Request - Invalid profile_id or other parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: invalid request body
        "401":
          description: Unauthorized - User is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: unauthorized access
        "404":
          description: Not Found - Profile not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: profile not found
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: internal Server Error

  /api/profiles/{profile_id}/profile_complete:
    post:
      summary: Update Profile Completion To Admin
      description: This api is used to send email to admin for update the completion of employee profile
      tags:
        - Email
      security:
        - bearerAuth: []
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Contains the profile ID of the admin to whom the send email
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profile_id:
                  type: number
                  example: 80
      responses:
        "200":
          description: Invitation sent successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Profile Completed Successfully
        "400":
          description: Bad Request - Invalid profile_id or other parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: invalid request body
        "401":
          description: Unauthorized - User is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: unauthorized access
        "404":
          description: Not Found - Profile not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: profile not found
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: internal Server Error
